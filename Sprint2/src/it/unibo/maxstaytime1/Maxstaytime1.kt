/* Generated by AN DISI Unibo */ 
package it.unibo.maxstaytime1

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Maxstaytime1 ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "s0"
	}
	@kotlinx.coroutines.ObsoleteCoroutinesApi
	@kotlinx.coroutines.ExperimentalCoroutinesApi			
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		
				val TimeMaxStay 	= 90000L
				var StartTime 		= 0L	
				var TimerDone 		= 0L
				var TimerGlobalDone = 0L
				var TimeAfterResume = 0L
				var TimerToReturn   = 0L
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						println("maxstaytime1		|| START")
						updateResourceRep( "start"  
						)
					}
					 transition( edgeName="goto",targetState="waitCmd", cond=doswitch() )
				}	 
				state("waitCmd") { //this:State
					action { //it:State
						updateResourceRep( "waitCmd1"  
						)
					}
					 transition(edgeName="t094",targetState="newTimer",cond=whenDispatch("startTimer"))
					transition(edgeName="t095",targetState="waitCmd",cond=whenDispatch("stopTimer"))
					transition(edgeName="t096",targetState="resume",cond=whenDispatch("resumeTimer"))
					transition(edgeName="t097",targetState="returnTimerDone",cond=whenRequest("getMaxStayTimeLeftReq"))
				}	 
				state("newTimer") { //this:State
					action { //it:State
						StartTime = getCurrentTime()
						 TimerGlobalDone = 0  
						updateResourceRep( "StartTimerCount1"  
						)
						stateTimer = TimerActor("timer_newTimer", 
							scope, context!!, "local_tout_maxstaytime1_newTimer", TimeMaxStay )
					}
					 transition(edgeName="t198",targetState="timerExpired",cond=whenTimeout("local_tout_maxstaytime1_newTimer"))   
					transition(edgeName="t199",targetState="stop",cond=whenDispatch("stopTimer"))
					transition(edgeName="t1100",targetState="newTimer",cond=whenDispatch("startTimer"))
					transition(edgeName="t1101",targetState="returnTimerDone",cond=whenRequest("getMaxStayTimeLeftReq"))
				}	 
				state("returnTimerDone") { //this:State
					action { //it:State
						TimerDone = getDuration(StartTime)
						 
									TimerGlobalDone += TimerDone
									TimerToReturn = TimeMaxStay - TimerGlobalDone
						updateResourceRep( "TimerDone1 $TimerToReturn "  
						)
						answer("getMaxStayTimeLeftReq", "getMaxStayTimeLeftReply", "getMaxStayTimeLeftReply($TimerToReturn)"   )  
					}
					 transition( edgeName="goto",targetState="resume", cond=doswitch() )
				}	 
				state("stop") { //this:State
					action { //it:State
						TimerDone = getDuration(StartTime)
						 TimerGlobalDone += TimerDone  
						updateResourceRep( "Stop1 $TimerGlobalDone "  
						)
					}
					 transition(edgeName="t2102",targetState="resume",cond=whenDispatch("resumeTimer"))
					transition(edgeName="t2103",targetState="newTimer",cond=whenDispatch("startTimer"))
					transition(edgeName="t2104",targetState="returnTimerDoneStop",cond=whenRequest("getMaxStayTimeLeftReq"))
				}	 
				state("returnTimerDoneStop") { //this:State
					action { //it:State
						 
									TimerToReturn = TimeMaxStay - TimerGlobalDone
						updateResourceRep( "Return1 $TimerGlobalDone "  
						)
						answer("getMaxStayTimeLeftReq", "getMaxStayTimeLeftReply", "getMaxStayTimeLeftReply($TimerToReturn)"   )  
					}
					 transition(edgeName="t2105",targetState="resume",cond=whenDispatch("resumeTimer"))
					transition(edgeName="t2106",targetState="newTimer",cond=whenDispatch("startTimer"))
					transition(edgeName="t2107",targetState="returnTimerDoneStop",cond=whenRequest("getMaxStayTimeLeftReq"))
				}	 
				state("resume") { //this:State
					action { //it:State
						 TimeAfterResume = TimeMaxStay - TimerGlobalDone  
						updateResourceRep( "Resume1 $TimeAfterResume "  
						)
						StartTime = getCurrentTime()
						stateTimer = TimerActor("timer_resume", 
							scope, context!!, "local_tout_maxstaytime1_resume", TimeAfterResume )
					}
					 transition(edgeName="t3108",targetState="timerExpired",cond=whenTimeout("local_tout_maxstaytime1_resume"))   
					transition(edgeName="t3109",targetState="stop",cond=whenDispatch("stopTimer"))
					transition(edgeName="t3110",targetState="newTimer",cond=whenDispatch("startTimer"))
					transition(edgeName="t3111",targetState="returnTimerDone",cond=whenRequest("getMaxStayTimeLeftReq"))
				}	 
				state("timerExpired") { //this:State
					action { //it:State
						println("EXPIRED1")
						updateResourceRep( "TimerExpired1 "  
						)
						forward("maxStayTimerExpired", "maxStayTimerExpired(1)" ,"maxstaytime" ) 
					}
					 transition( edgeName="goto",targetState="waitCmd", cond=doswitch() )
				}	 
			}
		}
}
